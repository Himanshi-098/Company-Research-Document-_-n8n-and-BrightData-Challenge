{
  "name": "Part 3",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.googleapis.com/upload/drive/v3/files",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "uploadType",
              "value": "multipart"
            },
            {
              "name": "supportsAllDrives",
              "value": "true"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "multipart/related; boundary=divider",
        "body": "={{ $json.rawData }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -620,
        -300
      ],
      "id": "93b81471-0885-4e3f-8d0e-38ae07f02d88",
      "name": "CreateGoogleDoc1",
      "notesInFlow": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "h7bEchuF5JB122PT",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e7ee03ac-13e3-4fca-a7bc-57c8fc56dc42",
              "name": "document_name",
              "value": "={{ $('Execute Workflow').item.json['Company Name via website'] }} Discovery Call Research",
              "type": "string"
            },
            {
              "id": "48a07ef2-ae46-4bfc-aa7e-d92a74ef46d6",
              "name": "html_content",
              "value": "=<h1>{{ $('Execute Workflow').item.json['Company Name via website'] }}</h1>\n\n\n\n<h2>Business Offerings</h2>\n{{ $json['Core Services & Offerings'] }}\n<hr style=\"border: 0; border-top: 3px dotted black;\">\n<h2>Company Highlights</h2>\n{{ $json['Recent News & Growth Milestones'] }}\n<hr style=\"border: 0; border-top: 3px dotted black;\">\n<h2>Revenue & Performance</h2>\n{{ $json['Financial Overview'] }}\n<hr style=\"border: 0; border-top: 3px dotted black;\">\n<h2>Technology Stack</h2>\n{{ $json['Product Lines & Technology'] }}\n<hr style=\"border: 0; border-top: 3px dotted black;\">\n<h2>Executive Bio</h2>\n{{ $json['Person Background'] }}\n<div style=\"text-align: center; border-top: 1px solid #000; line-height: 0; margin: 20px 0;\">\n  <span style=\"background:#fff; padding:0 10px;\">✦ ✦ ✦</span>\n</div>",
              "type": "string"
            },
            {
              "id": "22b02fba-ba72-423a-b92f-1191a183a554",
              "name": "drive_folder_id",
              "value": "18rZGRH7wtcHBF2ZhJw3jd65RRvJMtfS1",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1180,
        -300
      ],
      "id": "c441c7c0-abcd-42a7-b3ad-50d4844f01f3",
      "name": "set_fields",
      "notesInFlow": true
    },
    {
      "parameters": {
        "jsCode": "const boundary = 'divider';\nconst docName = $input.first().json.document_name;\nconst folderId = $input.first().json.drive_folder_id;\nconst htmlContent = $input.first().json.html_content;\n\nconst metadata = JSON.stringify({\n  name: docName,\n  mimeType: \"application/vnd.google-apps.document\",\n  parents: [folderId]\n});\n\nconst htmlWithStyles = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    /* Add bottom margin to block elements for spacing */\n    p,\n    ul,\n    ol,\n    table,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      margin-bottom: 10pt;\n    }\n\n    h2 {\n      margin-top: 20pt;\n    }\n\n    /* Prevent margin collapse issues or excessive space inside lists */\n    li {\n       margin-bottom: 2pt; /* Optional: small space between list items */\n    }\n\n    /* Remove margin from the last child within common containers if needed */\n    /* This might be overly aggressive, test without it first */\n    /*\n    body > *:last-child,\n    li > *:last-child {\n       margin-bottom: 0;\n    }\n    */\n  </style>\n</head>\n<body>\n  ${htmlContent}\n</body>\n</html>\n`;\n\n// Construct the body with literal \\r\\n ONLY\nlet body = `--${boundary}\\r\\n`;\nbody += `Content-Type: application/json; charset=UTF-8\\r\\n`;\nbody += `\\r\\n`; // Blank line\nbody += `${metadata}\\r\\n`;\nbody += `--${boundary}\\r\\n`;\nbody += `Content-Type: text/html\\r\\n`;\nbody += `\\r\\n`; // Blank line\nbody += `${htmlWithStyles}\\r\\n`; // Add the HTML content\nbody += `--${boundary}--\\r\\n`; // Final boundary\n\nreturn {\n  rawData: body \n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -880,
        -300
      ],
      "id": "499cc9b8-333f-48fd-9a66-859ca2161901",
      "name": "Prepare_Request"
    },
    {
      "parameters": {
        "operation": "share",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "permissionsUi": {
          "permissionsValues": {
            "role": "reader",
            "type": "anyone"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -320,
        -300
      ],
      "id": "2459c24a-3c65-465a-94ff-6859ae7bf184",
      "name": "Share file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "h7bEchuF5JB122PT",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Step 1: Extract and clean the raw JSON text from the 'text' field\nlet rawText = $json.text;\n\n// Remove ```json and ``` markers\nrawText = rawText.replace(/```json|```/g, '').trim();\n\n// Parse the JSON safely\nlet parsed;\ntry {\n  parsed = JSON.parse(rawText);\n} catch (err) {\n  throw new Error(\"Invalid JSON format in 'text' field\");\n}\n\n// Step 2: Just return the raw HTML blocks inside \"output\" unchanged\nreturn parsed.output || {};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1460,
        -300
      ],
      "id": "1a35cecb-9275-43e8-8e7c-77923c973452",
      "name": "Code11"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -3260,
        -300
      ],
      "id": "3c00863f-2380-49f9-bb31-d307de624a5e",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<h2>Core Services & Offerings</h2>\n{{ $('Code11').item.json[\"Core Services & Offerings\"] }}\n<hr style=\"height:1px; border-width:0; color:gray; background-color:gray\"><br>\n<h2>Recent News & Growth Milestones</h2>\n{{ $('Code11').item.json[\"Recent News & Growth Milestones\"] }}\n<hr style=\"height:1px; border-width:0; color:gray; background-color:gray\"><br>\n<h2>Financial Overview</h2>\n{{ $('Code11').item.json[\"Financial Overview\"] }}\n<hr style=\"height:1px; border-width:0; color:gray; background-color:gray\"><br>\n<h2>Product Lines & Technology</h2>\n{{ $('Code11').item.json[\"Product Lines & Technology\"] }}\n<hr style=\"height:1px; border-width:0; color:gray; background-color:gray\"><br>\n<h2>CEO Background</h2>\n{{ $('Code11').item.json[\"Person Background\"] }}\n\nEmail - {{ $('Loop Over Items1').item.json.Email }}\n\nCompany Name as per website - {{ $('Execute Workflow').item.json[\"Company Name via website\"] }}\n\nName - {{ $('Limit').item.json[\"First Name\"] }} {{ $('Limit').item.json[\"Last Name\"] }}\n\nWebsite - {{ $('Limit').item.json.Website }}\n\nCall book time - {{ $('Limit').item.json[\"Call Booked Time\"] }}",
        "messages": {
          "messageValues": [
            {
              "message": "Role\n\nYou are an analyst that converts messy research text into a clean Slack-ready lead summary.\n\nScope & Sources\n\nUse only the content in the user’s prompt.\n\nDo not browse the web or add assumptions.\n\nNever invent facts.\n\nIf evidence is missing or ambiguous, write “Not Provided”.\n\nOutput (STRICT)\n\nReturn one JSON object with exactly two top-level fields:\n\n\"text\": a single JSON string containing the Slack message (use \\n for line breaks; no code fences).\n\n\"Result\": \"Qualified\" or \"Disqualified\" (decide from the research notes provided).\n\nSlack Message TEMPLATE\n\n*:tada::tada: QUALIFIED :tada::tada:*   or   *:no_entry_sign::no_entry_sign: DISQUALIFIED :no_entry_sign::no_entry_sign:*\n\n*Company Name* - {company name or “Not Provided”}  \n*Person Name* - {person name or “Not Provided”}  \n*Email* - {email or “Not Provided”}  \n*Company URL* - {company URL or “Not Provided”}  \n*Booking Time* - {booking time or “Not Provided”}  \n\n*Green Flags* - {exactly 3 positive pointers, or “No Flags”}  \n\n*Red Flags* - {exactly 2 negative pointers, or “No Flags”}\n\n\nRules\n\nAlways fill all five detail lines (Company, Person, Email, URL, Booking Time).\n\nIf data is missing → \"Not Provided\".\n\nGreen Flags: 3 positives, if fewer → fill with \"No Flags\".\n\nRed Flags: 2 negatives, if none → \"No Flags\".\n\nFirst line must always be either *:tada:Qualified:tada:* or *:no_entry_sign:Disqualified:no_entry_sign:*.\n\nNo arrays, no nested JSON inside \"text\", no extra fields.\n\nFail-Safe Behaviors\n\nIf company name is missing → “Company not specified”.\n\nIf person name missing → “Leader not specified”.\n\nIf no flags at all → use \"No Flags\".\n\nFinal JSON Example\n\n\n{\n  \"text\": \"*:tada::tada:QUALIFIED:tada::tada:*\\n\\n*Company Name* - Acme Corp\\n*Person Name* - Jane Roe\\n*Email* - jane@acme.com\\n*Company URL* - https://acme.com\\n*Booking Time* - 2025-09-01 3:00 PM\\n\\n*Green Flags* - Strong B2B automation product\\nGrowing client base with repeat contracts\\nClear decision-maker identified\\n\\n*Red Flags* - Limited revenue evidence\\nNo recent funding disclosed\",\n  \"Result\": \"Qualified\"\n}\n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -80,
        -300
      ],
      "id": "f189917c-bdee-444b-b807-56d4eb976ae6",
      "name": "Basic LLM Chain2"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yvTdVAMEcG9mItaS",
          "mode": "list",
          "cachedResultName": "N8N Part 1 Competition"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -2960,
        -280
      ],
      "id": "c5e09585-ca1e-4663-a8a1-e19c896b3020",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "TPQlEUBOyILzuzld",
          "mode": "list",
          "cachedResultName": "N8N Part 2 Competition"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -2140,
        -300
      ],
      "id": "1b1b3570-c577-4522-8249-638044b132fb",
      "name": "Execute Workflow1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c114213d-9120-494c-831e-dbccebecd75d",
                    "leftValue": "={{ $json['Slack message Sent'] }}",
                    "rightValue": "No",
                    "operator": {
                      "type": "string",
                      "operation": "notExists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json['Slack message Sent'] }}",
                    "rightValue": "Yes",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "90b51d5a-df06-4f34-89c6-688cbd7755ae"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2680,
        -280
      ],
      "id": "4fd8e422-4433-4ac8-9f05-cad85291883c",
      "name": "Switch2"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2400,
        -300
      ],
      "id": "d37e5394-7b38-45b0-84d2-78ea8be34f37",
      "name": "Wait",
      "webhookId": "19ac9e2a-0fb1-49ea-9b71-7ac81c7a1dfb"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://slack.com/api/chat.postMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer <Slack API Key Here>"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "channel",
              "value": "C098AK8QD5L"
            },
            {
              "name": "text",
              "value": "={{ $json.text }}\n\n*Full Report*: <https://docs.google.com/document/d/{{ $('CreateGoogleDoc1').item.json.id }}|Click Here>"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        780,
        -360
      ],
      "id": "3ef0bb52-3102-4e87-8b19-8e67623faa83",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://slack.com/api/chat.postMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer <Slack API Key Here>"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "channel",
              "value": "C098AK8QD5L"
            },
            {
              "name": "thread_ts",
              "value": "={{ $('Execute Workflow').item.json['Slack Ts'] }}"
            },
            {
              "name": "blocks",
              "value": "=[\n    {\n      \"type\": \"section\",\n      \"text\": { \"type\": \"mrkdwn\", \"text\": \"{{ $json.text }}\n\n*Full Report*: <https://docs.google.com/document/d/{{ $('CreateGoogleDoc1').item.json.id }}|Click Here>\" }\n    },\n    {\n      \"type\": \"actions\",\n      \"elements\": [\n        {\n          \"type\": \"button\",\n          \"action_id\": \"disqualify\",\n          \"text\": { \"type\": \"plain_text\", \"text\": \"Disqualify\" },\n          \"style\": \"danger\",\n          \"value\": \"{{ $('Execute Workflow').item.json['Hubspot Deal ID'] }}\"\n        }\n      ]\n    }\n  ]"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        780,
        -180
      ],
      "id": "ebcf6fd9-daf2-4629-b90a-640a77050764",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.Result }}",
                    "rightValue": "Qualified",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "6e5b4b94-dbea-4c44-b350-b0feb1dae7f2"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e71c49a8-3f46-42c2-8a81-061ac6d1a881",
                    "leftValue": "={{ $json.Result }}",
                    "rightValue": "Disqualified",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        540,
        -240
      ],
      "id": "b0251853-f866-4057-b3a6-9b798d916f8f",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Website Homepage -  {{ $('Execute Workflow').item.json['Website Homepage'] }}\n\nWebsite About us page - {{ $('Execute Workflow').item.json['Website About us page'] }}\n\nWebsite Product / service page - {{ $('Execute Workflow').item.json['Website Product / service page'] }}\n\nWebsite Financial Info Page - {{ $('Execute Workflow').item.json['Website Financial Info Page'] }}\n\nCompany Summary via 3rd party website Source 1 - {{ $json['News 3rd party scrapped part 1'] }}\n\nCompany Summary via 3rd party website Source 2 - {{ $json['News 3rd party scrapped part 2'] }}\n\nCompany Name Via its website - {{ $('Execute Workflow').item.json['Company Name via website'] }}\n\n\nApollo data - \n\n  Company Name - {{ $('Execute Workflow').item.json['Apollo data Company Name'] }}\n  Founded year - {{ $('Execute Workflow').item.json['Apollo data Founded year'] }}\n  Primary Industry - {{ $('Execute Workflow').item.json['Apollo data Primary Industry'] }}\n  Secondary Industry  - {{ $('Execute Workflow').item.json['Apollo data Secondary Industry'] }}\n  Employee count - {{ $('Execute Workflow').item.json['Apollo data Employee count'] }}\n  Annual Revenue - {{ $('Execute Workflow').item.json['Apollo data Annual Revenue'] }}\n  Total Funding - {{ $('Execute Workflow').item.json['Apollo data Total Funding'] }}\n  Latest funding round - {{ $('Execute Workflow').item.json['Apollo data Latest funding round'] }}\n  Linkedin URL - {{ $('Execute Workflow').item.json['Apollo data Linkedin URL'] }}\n  Twitter URL - {{ $('Execute Workflow').item.json['Apollo Twitter URL'] }}\n  Facebook URL - {{ $('Execute Workflow').item.json['Apollo Facebook URL'] }}\n  Keywords - {{ $('Execute Workflow').item.json['Apollo Keywords'] }}\n\n\n\nLinkedin Data of CEO - \n\nheadline - {{ $json.headline }}\nabout - {{ $json.about }}\nlocation full - {{ $json.location_full }}\nis_creator - {{ $json.is_creator }}\nis_influencer - {{ $json.is_influencer }}\nis_premium - {{ $json.is_premium }}\nfollower count - {{ $json.follower_count }}\nconnection count - {{ $json.connection_count }}\ncurrent company - {{ $json.current_company }}\nprevious company 1 title - {{ $json.previous_comapany_1_title }}\nprevious company 1 company - {{ $json['previous company 1 company'] }}\nprevious company 1 duration - {{ $json['previous company 1 duration'] }}\nprevious company 2 title - {{ $json['previous company 2 title'] }}\nprevious company 2 company - {{ $json['previous company 2 company'] }}\nprevious company 2 duration - {{ $json['previous company 2 duration'] }}\nprevious company 3 title - {{ $json['previous company 3 title'] }}\nprevious company 3 company - {{ $json['previous company 3 company'] }}\nprevious company 3 duration - {{ $json['previous company 3 duration'] }}\neducation 1 degree - {{ $json['education 1 degree'] }}\neducation 1 school - {{ $json['education 1 school'] }}\neducaton 1 duration - {{ $json['educaton 1 duration'] }}\neducation 2 degree - {{ $json['education 2 degree'] }}\neducation 2 school - {{ $json['education 2 school'] }}\neducaton 2 duration - {{ $json['education 2 duration'] }}\n",
        "messages": {
          "messageValues": [
            {
              "message": "You are a company research assistant. You will be provided with structured and unstructured data sources about a business, including:\n\nWebsite content (e.g., homepage, About Us, product/service pages)\n\nCompany database entries (e.g., Apollo, Crunchbase)\n\nExecutive LinkedIn profiles\n\nNews summaries, press releases, and filings\n\nYour task is to extract and condense the most accurate, clear, and factual information into a structured JSON format. The output is used internally for lead qualification, sales research, and pre-call prep — it must be neutral, concise, and data-rich, not promotional or narrative.\n\n🧾 Output Format (Standardized JSON)\n\n\n{\n    \"output\": {\n        \"Core Services & Offerings\": \"<ul><li>…</li><li>…</li></ul>\",\n        \"Recent News & Growth Milestones\": \"<ul><li>…</li><li>…</li></ul>\",\n        \"Financial Overview\": \"<ul><li>…</li><li>…</li></ul>\",\n        \"Product Lines & Technology\": \"<ul><li>…</li><li>…</li></ul>\",\n        \"Person Background\": \"<ul><li>…</li></ul>\"\n    }\n}\n\n\n\n\n\n📌 Output Rules\nEach value must be a single HTML string using only <ul> and <li> tags.\n\nDO NOT USE MARKDOWN LANGUAGE JUST BUILD IT WITH HTML FORMATTING FOR GOOGLE DOC\n\nNested <ul> inside <li> is allowed for grouping related data (e.g., multiple product features under one platform).\n\nUse clear, factual bullet points — avoid full sentences, storytelling, or narrative paragraphs.\n\nMaintain a neutral tone — no sales copy, bolding (except for key terms), links, or extra HTML tags.\n\nBold every key term: Financial metrics (Total Revenue, EBITDA, Cash on Hand, Total Assets, Total Liabilities, EPS), product names, companies, and dates (YYYY).\n\nYears at the end: Always append (<b>YYYY</b>) to milestones, financials, and career events.\n\nNested bullets: Group features under products, financial sub-items, etc.\n\nSkimmability\n\n1-line bullets: Max 10–15 words per <li>.\n\nNo fluff: Only numbers, named entities, and explicit facts.\n\nHierarchy: Use sub-bullets (<ul> inside <li>) for related details.\n\nCharacter Limits\nEach field: 300–600 chars (including HTML tags).\n\n📥 What to Include\n\n🔹 Core Services & Offerings\n\nMain business activities and vertical (e.g., SaaS, consulting, manufacturing, fintech)\n\nDelivery model or structure (e.g., white-label platform, API-based, full-service)\n\nClient segments served (e.g., enterprise, SMB, D2C, government)\n\nInvestment vehicles or fund types (if applicable)\n\nAvoid repeating financial data or product names that belong in other sections\n\n🔹 Recent News & Growth Milestones\n\nInclude only events from the past 24 months\n\nPrioritize: product launches, funding rounds, acquisitions, leadership changes, strategic partnerships\n\nAlways include the month/year and monetary amount (if mentioned)\n\nAvoid broad statements like “grew significantly” unless paired with numbers\n\n🔹 Financial Overview\n\nInclude annual revenue / revenue, EBITDA, cash on hand, liabilities, assets, EPS, or funding raised (most recent figures only)\n\nInclude YoY growth % only if explicitly stated\n\nClearly label if figures are from a subsidiary or public parent\n\nDo not repeat transaction volume, AUM, or other values already used in the News or Services section\n\n🔹 Product Lines & Technology\n\nList platform/product names with optional launch year\n\nGroup key features or innovations under the relevant platform (use nested bullets if needed)\n\nMention technology stack or core infrastructure only if explicitly stated (e.g., blockchain, AI, APIs)\n\nSimplify any technical language if not self-explanatory\n\n🔹 Person Background – [Full Name]\n\nUse the Person’s full name from LinkedIn or reliable source\n\nPresent a clear career timeline using bullet points (e.g., 2018: Founded X, 2021: Raised Series A)\n\nInclude major roles, company milestones led, exits, acquisitions, or media mentions (if factual)\n\nAdd education only if the degree and institution are named\n\nAvoid soft skills, personality traits, or inferred motivations\n\n❌ What to Avoid\n\nNo hallucinated, inferred, or assumed data\n\nNo marketing adjectives (e.g., “world-class”, “innovative”, “game-changing”)\n\nNo repetition of data across multiple sections\n\nNo full paragraphs, inline links, bold text, or extra HTML formatting (except where required)\n\nNo investor speculation, stock movement analysis, or vague phrases\n\n🛑 Missing Data Rule\nIf there is no credible or sufficient data for any section, return:\n<ul><li>(Not available)</li></ul>\n"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -1880,
        -300
      ],
      "id": "07c58d54-bf1b-49f0-9212-0493a4a67154",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1800,
        -160
      ],
      "id": "29f73962-5dbe-4eb4-af3a-f5ea2de6aa7c",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "71aHChOthgcFEsxg",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        20,
        -160
      ],
      "id": "f29f2a40-dfe1-4557-bc77-153b9182fa1d",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "71aHChOthgcFEsxg",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Converts an input like:\n// [{ json: { text: \"```json\\n{ \\\"text\\\": \\\"...\\\", \\\"Result\\\": \\\"Qualified\\\" }\\n```\" } }]\n// into: [{ json: { text: \"...\", Result: \"Qualified\" } }]\n\nreturn $input.all().map(item => {\n  const raw = (item.json.text ?? '').trim();\n\n  if (typeof raw !== 'string' || !raw) {\n    return { json: {} };\n  }\n\n  // Remove leading ```json and trailing ``` fences\n  const withoutFences = raw.replace(/^\\s*```json\\s*|\\s*```\\s*$/g, '').trim();\n\n  // Extra safety: slice between first '{' and last '}'\n  const start = withoutFences.indexOf('{');\n  const end = withoutFences.lastIndexOf('}');\n  if (start === -1 || end === -1) {\n    throw new Error('No JSON object found in text');\n  }\n\n  const jsonStr = withoutFences.slice(start, end + 1);\n  const parsed = JSON.parse(jsonStr);\n\n  return { json: parsed };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        260,
        -260
      ],
      "id": "935e9436-ca64-4f79-966d-a0c16302fc06",
      "name": "Code3"
    },
    {
      "parameters": {
        "content": "## Sheet → Loop → Part 1 → Slack Gate → Wait → Part 2\n\nTrigger starts with **Google Sheet rows** → Limit ensures manageable batch → Edit Fields maps **first/last name, URL, email, booked call time**.\n\nLoop Over Items1 iterates each row → Execute Workflow (Part 1) runs enrichment/scraping sync → **Switch2** checks Slack message Sent:\n\nYes → loop back (skip duplicates).\n\nNo/blank → Wait 30s → Execute Workflow1 (Part 2) fetches profile + news data.\n\n**Result**: rows from Sheet flow into enrichment → single Slack post per lead → Part 2 runs only when Slack message hasn’t already been sent.",
        "height": 548,
        "width": 2244
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4200,
        -540
      ],
      "typeVersion": 1,
      "id": "1f431837-9250-4201-bebb-96eecfa599f7",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## **LLM → Parse → Set → Multipart → Upload → Share**\n\n**Basic LLM Chain1** emits JSON with sectioned HTML → **Code11** parses `text` → `output` (raw HTML blocks) → **set_fields** composes **document_name**, **html_content**, **drive_folder_id** → **Prepare_Request** builds `multipart/related` body (boundary **divider**; Part 1: JSON metadata; Part 2: full HTML shell with spacing CSS; CRLF line breaks) → **CreateGoogleDoc1** `POST /upload/drive/v3/files` (`uploadType=multipart`, **supportsAllDrives**) → **Share file** sets **anyone / reader** permission.\n\n**Result:** clean Google Doc created in target folder with a public view link; preserves HTML lists/headers; strict boundary/CRLF ensures valid multipart.\n",
        "height": 516,
        "width": 1760
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1900,
        -520
      ],
      "typeVersion": 1,
      "id": "f8631c87-5dee-4e48-a63f-837e49e3a564",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## **Slack Lead-Fit Scorer → Poster (Workflow 3)**\n\n**OpenAI Chat Model1 → Basic LLM Chain2** builds strict JSON with **\"text\"** (Slack-ready summary) + **\"Result\"** (Qualified/Disqualified) from prepared HTML/context → **Code3** cleans/parses to `{ text, Result }` → **Switch** routes on **Result**:\n- **Qualified** → **HTTP Request** posts Slack message with **Full Report** link (`{{ CreateGoogleDoc1.id }}`).\n- **Disqualified** → **HTTP Request1** posts Slack message (threaded via `Slack Ts`) **with a “Disqualify” button** + **Full Report** link.\n\n**Both paths** → write back to Sheet:\n- **Update row in sheet** sets **Google Doc Link** and **Qualified / Disqualified = Qualified** (for pass path).\n- **Update row in sheet1** sets **Google Doc Link** and **Qualified / Disqualified = Disqualified** (for fail path).\n\n**Result:** Single Slack-ready verdict + doc link posted; spreadsheet updated with doc URL and final qualification state.\n",
        "height": 604,
        "width": 1612
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -120,
        -620
      ],
      "typeVersion": 1,
      "id": "e824d323-7149-4656-ba6d-5fc822feb4ca",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1-QiyVvXx1lsOAtz4SHj0um0IaKVn8FpHNxF_j8vWlvs",
          "mode": "list",
          "cachedResultName": "Booked Calls Input",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1-QiyVvXx1lsOAtz4SHj0um0IaKVn8FpHNxF_j8vWlvs/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1-QiyVvXx1lsOAtz4SHj0um0IaKVn8FpHNxF_j8vWlvs/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Google Doc Link"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -3900,
        -300
      ],
      "id": "ff4e0bf7-fc9f-4b15-88b5-7a54304efe84",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "dUdZ3pi1iymUai6I",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -4120,
        -300
      ],
      "id": "5088ad0c-c7bd-4702-b517-938ad84d3141",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -3700,
        -300
      ],
      "id": "2529a550-4d57-4bb1-a9f4-47ca0a571966",
      "name": "Limit"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7d99730d-5b7b-4bab-8221-1f1b0308204b",
              "name": "First Name",
              "value": "={{ $json['First Name'] }}",
              "type": "string"
            },
            {
              "id": "90d96a75-a4f1-45d1-926d-308b863386cf",
              "name": "Last Name",
              "value": "={{ $json['Last Name'] }}",
              "type": "string"
            },
            {
              "id": "0334f76b-ff83-4c39-ac12-9234604a4235",
              "name": "Company URL",
              "value": "={{ $json.Website }}",
              "type": "string"
            },
            {
              "id": "122d87cd-295b-416b-b002-5f92489a77be",
              "name": "Email",
              "value": "={{ $json.Email }}",
              "type": "string"
            },
            {
              "id": "e1d9b2bf-eaa9-4ede-956f-f5286eeb92d4",
              "name": "Call Booked Time",
              "value": "={{ $json['Call Booked Time'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3480,
        -300
      ],
      "id": "156e487a-13d8-4c9e-9db6-db3d44bbe1da",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1-QiyVvXx1lsOAtz4SHj0um0IaKVn8FpHNxF_j8vWlvs",
          "mode": "list",
          "cachedResultName": "Booked Calls Input",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1-QiyVvXx1lsOAtz4SHj0um0IaKVn8FpHNxF_j8vWlvs/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1-QiyVvXx1lsOAtz4SHj0um0IaKVn8FpHNxF_j8vWlvs/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Google Doc Link": "=https://docs.google.com/document/d/{{ $('CreateGoogleDoc1').item.json.id }}",
            "Qualified / Disqualified": "Qualified",
            "row_number": "={{ $('Get row(s) in sheet').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Website",
              "displayName": "Website",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Call Booked Time",
              "displayName": "Call Booked Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Google Doc Link",
              "displayName": "Google Doc Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qualified / Disqualified",
              "displayName": "Qualified / Disqualified",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1100,
        -340
      ],
      "id": "8fd3a25f-7654-4bc5-bc08-ac727c1a6f07",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "dUdZ3pi1iymUai6I",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1-QiyVvXx1lsOAtz4SHj0um0IaKVn8FpHNxF_j8vWlvs",
          "mode": "list",
          "cachedResultName": "Booked Calls Input",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1-QiyVvXx1lsOAtz4SHj0um0IaKVn8FpHNxF_j8vWlvs/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1-QiyVvXx1lsOAtz4SHj0um0IaKVn8FpHNxF_j8vWlvs/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Google Doc Link": "=https://docs.google.com/document/d/{{ $('CreateGoogleDoc1').item.json.id }}",
            "Qualified / Disqualified": "Disqualified",
            "row_number": "={{ $('Get row(s) in sheet').item.json.row_number }}"
          },
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "First Name",
              "displayName": "First Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Last Name",
              "displayName": "Last Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Website",
              "displayName": "Website",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Call Booked Time",
              "displayName": "Call Booked Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Google Doc Link",
              "displayName": "Google Doc Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Qualified / Disqualified",
              "displayName": "Qualified / Disqualified",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1100,
        -160
      ],
      "id": "122b925f-8ce2-4876-9a53-b58a41338ea3",
      "name": "Update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "dUdZ3pi1iymUai6I",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "CreateGoogleDoc1": {
      "main": [
        [
          {
            "node": "Share file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set_fields": {
      "main": [
        [
          {
            "node": "Prepare_Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare_Request": {
      "main": [
        [
          {
            "node": "CreateGoogleDoc1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code11": {
      "main": [
        [
          {
            "node": "set_fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Share file": {
      "main": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain2": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Execute Workflow1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain1": {
      "main": [
        [
          {
            "node": "Code11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3f94e2de-291d-4fff-971c-c454b6878700",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7d00adb66fd9b9e829cd2b9ea4e4833789b30d07b2af67253b71bc389fcab134"
  },
  "id": "vurhmu041IqWwZSU",
  "tags": []
}